<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>text1 = string (" Hey guys, my mom Michaela has a second#house around here, you wanna#go see if she’s home?#She can probably help us get#into the White House.#I think she got a job there,#last I heard. ")
text2 = string (" Sure man, whatever. ")
text3 = string (" Remi, must you always be playing#phone games? ")
text4 = string (" Shh, I’m concentrating! ")
text5 = string (" *Sigh* ")
text6 = string ( " Wait, our Whitehouse contact is Ivanka’s#mother? " )
text7 = string (" Yeah. ")
text8 = string ("  So when you say “I think she’s got a job in#the White House”#you really mean “my mother is our#contact but I failed to mention this until#just now, a couple hours#out from the meetup”? ")
text9 = string (" Whatever. ")
text10 = string (" Uhuh, so- ")
text11 = string (" Maybe you should drop this conversation,#Linus. ")
text12 = string (" Wha- ugh, sure. Fine. ")


talk = 1

out = string("")
spd = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (talk = 1)
{
    out = string_copy (text1,1,spd)
}
if (talk = 2)
{
    out = string_copy (text2,1,spd)
}
if (talk = 3)
{
    out = string_copy (text3,1,spd)
}
if (talk = 4)
{
    out = string_copy (text4,1,spd)
}
if (talk = 5)
{
    out = string_copy (text5,1,spd)
}

if (talk = 6)
{
    out = string_copy (text6,1,spd)
}
if (talk = 7)
{
    out = string_copy (text7,1,spd)
}
if (talk = 8)
{
    out = string_copy (text8,1,spd)
}
if (talk = 9)
{
    out = string_copy (text9,1,spd)
}
if (talk = 10)
{
    out = string_copy (text10,1,spd)
}
if (talk = 11)
{
    out = string_copy (text11,1,spd)
}
if (talk = 12)
{
    out = string_copy (text12,1,spd)
}



spd += 0.5

if (mouse_check_button_pressed(mb_left))
{
    talk += 1
    spd = 0
}


if (talk &gt; 12)
{
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt)
draw_set_color(c_white)
draw_set_valign(fa_top)
draw_set_halign(fa_left)

if (talk = 1)
{
    draw_sprite (spr_textbox,4,view_xview[0],view_yview[0]+600)
    draw_text (view_xview[0]+150,view_yview[0]+675-150, out)
}

if (talk = 2)
{
    draw_sprite (spr_textbox,3,view_xview[0],view_yview[0]+600)
    draw_text (view_xview[0]+150,view_yview[0]+675-100, out)
}

if (talk = 3)
{
    draw_sprite (spr_textbox,2,view_xview[0],view_yview[0]+600)
    draw_text (view_xview[0]+150,view_yview[0]+675-100, out)
}

if (talk = 4)
{
    draw_sprite (spr_textbox,3,view_xview[0],view_yview[0]+600)
    draw_text (view_xview[0]+150,view_yview[0]+675-100, out)
}

if (talk = 5)
{
    draw_sprite (spr_textbox,4,view_xview[0],view_yview[0]+600)
    draw_text (view_xview[0]+150,view_yview[0]+675-100, out)
}

if (talk = 6)
{
    draw_sprite (spr_textbox,1,view_xview[0],view_yview[0]+600)
    draw_text (view_xview[0]+150,view_yview[0]+675-100, out)
}

if (talk = 7)
{
    draw_sprite (spr_textbox,4,view_xview[0],view_yview[0]+600)
    draw_text (view_xview[0]+150,view_yview[0]+675-100, out)
}

if (talk = 8)
{
    draw_sprite (spr_textbox,2,view_xview[0],view_yview[0]+600)
    draw_text (view_xview[0]+150,view_yview[0]+675-150, out)
}

if (talk = 9)
{
    draw_sprite (spr_textbox,4,view_xview[0],view_yview[0]+600)
    draw_text (view_xview[0]+150,view_yview[0]+675-100, out)
}

if (talk = 10)
{
    draw_sprite (spr_textbox,2,view_xview[0],view_yview[0]+600)
    draw_text (view_xview[0]+150,view_yview[0]+675-100, out)
}

if (talk = 11)
{
    draw_sprite (spr_textbox,3,view_xview[0],view_yview[0]+600)
    draw_text (view_xview[0]+150,view_yview[0]+675-100, out)
}

if (talk = 12)
{
    draw_sprite (spr_textbox,2,view_xview[0],view_yview[0]+600)
    draw_text (view_xview[0]+150,view_yview[0]+675-100, out)
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
